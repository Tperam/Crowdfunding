{"ast":null,"code":"var _jsxFileName = \"/home/tperam/code/crowdfunding/src/Component/projectList.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n    window.testWeb3 = web3;\n  }\n\n  async componentWillMount() {\n    // 获取所有众筹项目的地址\n    const addresses = await ProjectListContract.methods.getProjectList().call(); // 获取projectInfoList\n\n    const projectList = await Promise.all(addresses.map(address => getProjectContract(address).methods.getGeneralInfo().call()));\n    const investorNum = await Promise.all(addresses.map(address => getProjectContract(address).methods.getInvestorNum().call()));\n    let projects = projectList.map((obj, index) => {\n      let [projectName, goal, maxInvest, minInvest, description, symbol, bonusEnds, balance] = Object.values(obj);\n      return {\n        projectName: web3.utils.toUtf8(projectName),\n        goal: web3.utils.fromWei(goal, \"ether\"),\n        maxInvest: web3.utils.fromWei(maxInvest, \"ether\"),\n        minInvest: web3.utils.fromWei(minInvest, \"ether\"),\n        description,\n        symbol: web3.utils.toUtf8(symbol),\n        bonusEnds,\n        balance: web3.utils.fromWei(balance, \"ether\"),\n        investorNum: investorNum[index][0],\n        address: addresses[index]\n      };\n    });\n    this.setState({\n      projects: projects\n    });\n  }\n\n  render() {\n    let projectListInfo = this.state.projects.map((project, index) => {\n      let flagBonusTime = project.bonusEnds > Date.parse(new Date()) / 1000;\n      let precentComplete = (project.balance / project.goal).toFixed(2); // let precentComplete = 50.66;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"mt40\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }\n      }, project.projectName, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"investorNum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, \"\\u5DF2\\u6295\\u8D44\\u4EBA\\u6570: \", project.investorNum, \"\\u4EBA\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(ProgressBar, {\n        animated: true,\n        variant: flagBonusTime ? \"warning\" : \"success\",\n        now: precentComplete,\n        label: precentComplete + \"%\",\n        className: \"mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"textHidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, project.description), /*#__PURE__*/React.createElement(Card.Text, {\n        as: Row,\n        className: \"mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }\n      }, \"goal: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, project.goal), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }\n      }, \"maxInvest: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }\n      }, project.maxInvest), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 8\n        }\n      }, \"minInvest: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }\n      }, project.minInvest), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }\n      }, \"\\u4F17\\u7B79\\u5B8C\\u6210\\u5EA6: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }\n      }, precentComplete, \"%\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: {\n          span: 2,\n          offset: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        as: Link,\n        to: \"/projectDetail/\" + project.address,\n        variant: flagBonusTime ? \"warning\" : \"success\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }\n      }, \"Learn more\")))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, \"\\u4F17\\u7B79\\u5217\\u8868\"), projectListInfo);\n  }\n\n}\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/tperam/code/crowdfunding/src/Component/projectList.js"],"names":["React","Card","Button","Row","Col","ProgressBar","Link","web3","ProjectListContract","getProjectContract","ProjectList","Component","constructor","props","state","projects","window","testWeb3","componentWillMount","addresses","methods","getProjectList","call","projectList","Promise","all","map","address","getGeneralInfo","investorNum","getInvestorNum","obj","index","projectName","goal","maxInvest","minInvest","description","symbol","bonusEnds","balance","Object","values","utils","toUtf8","fromWei","setState","render","projectListInfo","project","flagBonusTime","Date","parse","precentComplete","toFixed","span","offset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Row, Col, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from  '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component{\n\n\tconstructor( props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprojects:[]\n\t\t}\n\t\twindow.testWeb3 = web3\n\t}\n\n\tasync componentWillMount(){\n\t\t// 获取所有众筹项目的地址\n    \tconst addresses = await ProjectListContract.methods.getProjectList().call();\n    \t// 获取projectInfoList\n    \tconst projectList = await Promise.all(addresses.map(address=> getProjectContract(address).methods.getGeneralInfo().call() ));\n    \tconst investorNum = await Promise.all(addresses.map(address=> getProjectContract(address).methods.getInvestorNum().call() ));\n\n    \tlet projects = projectList.map( (obj,index)=>{\n\n    \t\tlet [\n\t\t\t\tprojectName,\n\t\t\t\tgoal,\n\t\t\t\tmaxInvest,\n\t\t\t\tminInvest,\n\t\t\t\tdescription,\n\t\t\t\tsymbol,\n\t\t\t\tbonusEnds,\n\t\t\t\tbalance\n    \t\t]=Object.values(obj);\n\n    \t\treturn {\n    \t\t\tprojectName: web3.utils.toUtf8(projectName),\n\t\t\t\tgoal: web3.utils.fromWei(goal,\"ether\"),\n\t\t\t\tmaxInvest: web3.utils.fromWei(maxInvest,\"ether\"),\n\t\t\t\tminInvest: web3.utils.fromWei(minInvest,\"ether\"),\n\t\t\t\tdescription,\n\t\t\t\tsymbol: web3.utils.toUtf8(symbol),\n\t\t\t\tbonusEnds,\n\t\t\t\tbalance: web3.utils.fromWei(balance,\"ether\"),\n\t\t\t\tinvestorNum: investorNum[index][0],\n\t\t\t\taddress:addresses[index]\n\t\t\t}\n    \t} )\n\n    \tthis.setState({\n    \t\tprojects:projects\n    \t})\n\t}\n\n\trender(){\n\t\tlet projectListInfo = this.state.projects.map( (project,index)=>{\n\t\t\tlet flagBonusTime = project.bonusEnds > Date.parse(new Date())/1000;\n\t\t\tlet precentComplete = (project.balance / project.goal).toFixed(2);\n\t\t\t// let precentComplete = 50.66;\n\t\t\treturn (\n\t    \t\t<Card className={\"mt40\"} key={index}>\n\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t{project.projectName}\n\t\t\t\t\t\t<div className={\"investorNum\"}>已投资人数: {project.investorNum}人</div>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Card.Body >\n\t\t\t\t\t\t<ProgressBar animated variant={flagBonusTime?\"warning\":\"success\"} now={precentComplete}  label={precentComplete+\"%\"} className=\"mb20\"/>\n\t\t\t\t\t\t<Card.Title className=\"textHidden\">{project.description}</Card.Title>\n\t\t\t\t\t\t<Card.Text as={Row} className=\"mb20\">\n\t\t\t\t\t\t\t<Col>goal: <span className={\"red\"}>{project.goal}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>maxInvest: <span className={\"red\"}>{project.maxInvest}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>minInvest: <span className={\"red\"}>{project.minInvest}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>众筹完成度: <span className={\"red\"}>{precentComplete}%</span></Col>\n\t\t\t\t\t    </Card.Text>\n\t\t\t\t\t    <Row>\n\t\t\t\t\t\t\t<Col xs={{ span: 2, offset: 10 }}><Button as={Link} to={\"/projectDetail/\"+project.address} variant={flagBonusTime?\"warning\":\"success\"} size=\"sm\">Learn more</Button></Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>众筹列表</h1>\n\t\t\t\t{ projectListInfo }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}