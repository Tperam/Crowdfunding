{"ast":null,"code":"var _jsxFileName = \"/home/tperam/code/crowdfunding/src/Component/projectList.js\";\nimport React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n  }\n\n  async componentWillMount() {\n    // 获取所有众筹项目的地址\n    const addresses = await ProjectListContract.methods.getProjectList().call(); // 获取projectInfoList\n\n    const projectList = await Promise.all(addresses.map(address => getProjectContract(address).methods.getGeneralInfo().call()));\n    let projects = projectList.map((obj, index) => {\n      let [projectName, goal, maxInvest, minInvest, description, symbol] = Object.values(obj);\n      return {\n        projectName: web3.utils.toAscii(projectName),\n        goal,\n        maxInvest,\n        minInvest,\n        description,\n        symbol: web3.utils.toAscii(symbol),\n        address: addresses[index]\n      };\n    });\n    this.setState({\n      projects: projects\n    });\n  }\n\n  render() {\n    let projectListInfo = this.state.projects.map((project, index) => {\n      let flagBonusTime = project.bonusEnd < Date.parse(new Date()) ? \"goldStyle\" : \"bronzeStyle\";\n      return /*#__PURE__*/React.createElement(Card, {\n        className: (flagBonusTime, \"mt10\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }\n      }, \" \", project.projectName, \" \"), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"textHidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, project.description), /*#__PURE__*/React.createElement(Card.Text, {\n        as: Row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 8\n        }\n      }, \"goal: \", web3.utils.fromWei(project.goal)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }\n      }, \"maxInvest: \", web3.utils.fromWei(project.maxInvest)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }\n      }, \"minInvest: \", web3.utils.fromWei(project.minInvest))), /*#__PURE__*/React.createElement(Button, {\n        as: Link,\n        className: \"mt10\",\n        to: \"/projectDetail/\" + project.address,\n        tovariant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, \"Learn more\")));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, projectListInfo);\n  }\n\n}\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/tperam/code/crowdfunding/src/Component/projectList.js"],"names":["React","Card","Button","Container","Row","Col","Link","web3","ProjectListContract","getProjectContract","ProjectList","Component","constructor","props","state","projects","componentWillMount","addresses","methods","getProjectList","call","projectList","Promise","all","map","address","getGeneralInfo","obj","index","projectName","goal","maxInvest","minInvest","description","symbol","Object","values","utils","toAscii","setState","render","projectListInfo","project","flagBonusTime","bonusEnd","Date","parse","fromWei"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from  '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component{\n\n\tconstructor( props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprojects:[]\n\t\t}\n\t}\n\n\tasync componentWillMount(){\n\t\t// 获取所有众筹项目的地址\n    \tconst addresses = await ProjectListContract.methods.getProjectList().call();\n    \t// 获取projectInfoList\n    \tconst projectList = await Promise.all(addresses.map(address=> getProjectContract(address).methods.getGeneralInfo().call() ))\n\n    \tlet projects = projectList.map( (obj,index)=>{\n    \t\tlet [\n\t\t\t\tprojectName,\n\t\t\t\tgoal,\n\t\t\t\tmaxInvest,\n\t\t\t\tminInvest,\n\t\t\t\tdescription,\n\t\t\t\tsymbol\n    \t\t]=Object.values(obj);\n\n    \t\treturn {\n    \t\t\tprojectName: web3.utils.toAscii(projectName),\n\t\t\t\tgoal,\n\t\t\t\tmaxInvest,\n\t\t\t\tminInvest,\n\t\t\t\tdescription,\n\t\t\t\tsymbol: web3.utils.toAscii(symbol),\n\t\t\t\taddress: addresses[index] \n\t\t\t}\n    \t} )\n\n    \tthis.setState({\n    \t\tprojects:projects\n    \t})\n\t}\n\n\trender(){\n\t\tlet projectListInfo = this.state.projects.map( (project,index)=>{\n\t\t\tlet flagBonusTime = project.bonusEnd < Date.parse(new Date()) ? \"goldStyle\" : \"bronzeStyle\";\n\t\t\treturn (\n\t    \t\t<Card className={flagBonusTime,\"mt10\"}>\n\t\t\t\t\t<Card.Header> {project.projectName} </Card.Header>\n\t\t\t\t\t<Card.Body >\n\t\t\t\t\t\t<Card.Title className=\"textHidden\">{project.description}</Card.Title>\n\t\t\t\t\t\t<Card.Text as={Row}>\n\t\t\t\t\t\t\t<Col>goal: {web3.utils.fromWei(project.goal)}</Col>\n\t\t\t\t\t\t\t<Col>maxInvest: {web3.utils.fromWei(project.maxInvest)}</Col>\n\t\t\t\t\t\t\t<Col>minInvest: {web3.utils.fromWei(project.minInvest)}</Col>\n\t\t\t\t\t    </Card.Text>\n\t\t\t\t\t\t<Button as={Link} className={\"mt10\"} to={\"/projectDetail/\"+project.address} tovariant=\"primary\">Learn more</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ projectListInfo }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}