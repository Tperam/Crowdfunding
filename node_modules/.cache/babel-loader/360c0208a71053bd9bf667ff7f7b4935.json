{"ast":null,"code":"var _jsxFileName = \"/home/tperam/code/crowdfunding/src/Component/projectList.js\";\nimport React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n  }\n\n  async ComponentWillMount() {\n    // 获取所有众筹项目的地址\n    const addresses = await ProjectList.methods.getProjectList().call();\n    const summaryList = await Promise.all(addresses.map(address => Project(address).methods.getSummary().call()));\n    /*\n        \tlet projectInfoList = addresses.map((address,index)=>{\n        \t\tlet ProjectContract = getProjectContract(address);\n        \t\tlet project = await ProjectList.methods.getContractInfo().call();\n    \n        \t\tlet flagBonusTime = project.bonusEnd < Date.parse(new Date()) ? \"goldStyle\" : \"bronzeStyle\";\n    \n        \t\treturn (\n    \t    \t\t<Card className={ flagBonusTime }>\n    \t\t\t\t\t<Card.Header>{project.projectName}</Card.Header>\n    \t\t\t\t\t<Card.Body as={Container}>\n    \t\t\t\t\t\t<Card.Title className=\"textHidden\">{project.description}</Card.Title>\n    \t\t\t\t\t\t<Row>\n    \t\t\t\t\t\t\t<Col>goal: {web3.utils.fromWei(project.goal)}</Col>\n    \t\t\t\t\t\t\t<Col>maxInvest: {web3.utils.fromWei(project.maxInvest)}</Col>\n    \t\t\t\t\t\t\t<Col>minInvest: {web3.utils.fromWei(project.minInvest)}</Col>\n    \t\t\t\t\t\t</Row>\n    \t\t\t\t\t\t<Button as={Link} to={\"/projectDetail/\"+address} tovariant=\"primary\">Learn more</Button>\n    \t\t\t\t\t</Card.Body>\n    \t\t\t\t</Card>\n    \t\t\t)\n        \t})*/\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"projectList\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/tperam/code/crowdfunding/src/Component/projectList.js"],"names":["React","Card","Button","Container","Row","Col","Link","web3","ProjectListContract","getProjectContract","ProjectList","Component","constructor","props","state","projects","ComponentWillMount","addresses","methods","getProjectList","call","summaryList","Promise","all","map","address","Project","getSummary","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAkB,cAAlB;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;;AAEA,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAAyC;AAExCC,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAC;AADG,KAAb;AAGA;;AAED,QAAMC,kBAAN,GAA0B;AACzB;AACG,UAAMC,SAAS,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBC,cAApB,GAAqCC,IAArC,EAAxB;AACA,UAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,GAAV,CAAcC,OAAO,IAAEC,OAAO,CAACD,OAAD,CAAP,CAAiBP,OAAjB,CAAyBS,UAAzB,GAAsCP,IAAtC,EAAvB,CAAZ,CAA1B;AACL;;;;;;;;;;;;;;;;;;;;;;AAsBE;;AAEDQ,EAAAA,MAAM,GAAE;AAGP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AA7CuC;;AAgDzC,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from  '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component{\n\n\tconstructor( props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprojects:[]\n\t\t}\n\t}\n\n\tasync ComponentWillMount(){\n\t\t// 获取所有众筹项目的地址\n    \tconst addresses = await ProjectList.methods.getProjectList().call()\n    \tconst summaryList = await Promise.all(addresses.map(address=>Project(address).methods.getSummary().call() ))\n/*\n    \tlet projectInfoList = addresses.map((address,index)=>{\n    \t\tlet ProjectContract = getProjectContract(address);\n    \t\tlet project = await ProjectList.methods.getContractInfo().call();\n\n    \t\tlet flagBonusTime = project.bonusEnd < Date.parse(new Date()) ? \"goldStyle\" : \"bronzeStyle\";\n\n    \t\treturn (\n\t    \t\t<Card className={ flagBonusTime }>\n\t\t\t\t\t<Card.Header>{project.projectName}</Card.Header>\n\t\t\t\t\t<Card.Body as={Container}>\n\t\t\t\t\t\t<Card.Title className=\"textHidden\">{project.description}</Card.Title>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>goal: {web3.utils.fromWei(project.goal)}</Col>\n\t\t\t\t\t\t\t<Col>maxInvest: {web3.utils.fromWei(project.maxInvest)}</Col>\n\t\t\t\t\t\t\t<Col>minInvest: {web3.utils.fromWei(project.minInvest)}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Button as={Link} to={\"/projectDetail/\"+address} tovariant=\"primary\">Learn more</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t)\n    \t})*/\n\t}\n\n\trender(){\n\t\t\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<projectList />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}