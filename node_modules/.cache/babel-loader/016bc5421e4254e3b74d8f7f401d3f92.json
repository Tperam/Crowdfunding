{"ast":null,"code":"var _jsxFileName = \"/home/tperam/code/crowdfunding/src/Component/projectList.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n    window.testWeb3 = web3;\n  }\n\n  async componentWillMount() {\n    // 获取所有众筹项目的地址\n    const addresses = await ProjectListContract.methods.getProjectList().call(); // 获取projectInfoList\n\n    const projectList = await addresses.map(async address => {\n      var info = await getProjectContract(address).methods.getGeneralInfo().call();\n      var investorNum = await getProjectContract(address).methods.getInvestorNum().call();\n      info.push(investorNum[0]);\n      return info;\n    });\n    console.log(projectList);\n    let projects = projectList.map((obj, index) => {\n      let [projectName, goal, maxInvest, minInvest, description, symbol, bonusEnds, balance, info] = Object.values(obj);\n      return {\n        projectName: web3.utils.toUtf8(projectName),\n        goal,\n        maxInvest,\n        minInvest,\n        description,\n        symbol: web3.utils.toUtf8(symbol),\n        bonusEnds,\n        balance,\n        address: addresses[index]\n      };\n    });\n    this.setState({\n      projects: projects\n    });\n  }\n\n  render() {\n    let projectListInfo = this.state.projects.map((project, index) => {\n      let flagBonusTime = project.bonusEnd > Date.parse(new Date()) / 1000;\n      console.log(flagBonusTime, project.bonusEnd, Date.parse(new Date()) / 1000);\n      return /*#__PURE__*/React.createElement(Card, {\n        className: (flagBonusTime ? \"goldStyle\" : \"\", \"mt20\"),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }\n      }, \" \", project.projectName, \" \"), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"textHidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, project.description), /*#__PURE__*/React.createElement(Card.Text, {\n        as: Row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 8\n        }\n      }, \"goal: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, web3.utils.fromWei(project.goal)), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }\n      }, \"maxInvest: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }\n      }, web3.utils.fromWei(project.maxInvest)), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }\n      }, \"minInvest: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }\n      }, web3.utils.fromWei(project.minInvest)), \" eth\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }\n      }, \"\\u5B8C\\u6210\\u5EA6: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }\n      }, web3.utils.fromWei(project.minInvest)), \" eth\")), /*#__PURE__*/React.createElement(Button, {\n        as: Link,\n        className: \"mt10\",\n        to: \"/projectDetail/\" + project.address,\n        variant: flagBonusTime ? \"warning\" : \"success\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, \"Learn more\")));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, \"\\u4F17\\u7B79\\u5217\\u8868\"), projectListInfo);\n  }\n\n}\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/tperam/code/crowdfunding/src/Component/projectList.js"],"names":["React","Card","Button","Row","Col","Link","web3","ProjectListContract","getProjectContract","ProjectList","Component","constructor","props","state","projects","window","testWeb3","componentWillMount","addresses","methods","getProjectList","call","projectList","map","address","info","getGeneralInfo","investorNum","getInvestorNum","push","console","log","obj","index","projectName","goal","maxInvest","minInvest","description","symbol","bonusEnds","balance","Object","values","utils","toUtf8","setState","render","projectListInfo","project","flagBonusTime","bonusEnd","Date","parse","fromWei"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport web3 from  '../libs/web3';\nimport ProjectListContract from '../libs/projectList';\nimport getProjectContract from '../libs/project';\n\nclass ProjectList extends React.Component{\n\n\tconstructor( props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprojects:[]\n\t\t}\n\t\twindow.testWeb3 = web3\n\t}\n\n\tasync componentWillMount(){\n\t\t// 获取所有众筹项目的地址\n    \tconst addresses = await ProjectListContract.methods.getProjectList().call();\n    \t// 获取projectInfoList\n    \tconst projectList = await addresses.map(async (address)=> {\n    \t\tvar info = await getProjectContract(address).methods.getGeneralInfo().call();\n    \t\tvar investorNum = await getProjectContract(address).methods.getInvestorNum().call();\n    \t\tinfo.push(investorNum[0]);\n\n    \t\treturn info;\n    \t} )\n\n\t\tconsole.log(projectList)\n\n    \tlet projects = projectList.map( (obj,index)=>{\n\n    \t\tlet [\n\t\t\t\tprojectName,\n\t\t\t\tgoal,\n\t\t\t\tmaxInvest,\n\t\t\t\tminInvest,\n\t\t\t\tdescription,\n\t\t\t\tsymbol,\n\t\t\t\tbonusEnds,\n\t\t\t\tbalance,\n\t\t\t\tinfo\n    \t\t]=Object.values(obj);\n\n    \t\treturn {\n    \t\t\tprojectName: web3.utils.toUtf8(projectName),\n\t\t\t\tgoal,\n\t\t\t\tmaxInvest,\n\t\t\t\tminInvest,\n\t\t\t\tdescription,\n\t\t\t\tsymbol: web3.utils.toUtf8(symbol),\n\t\t\t\tbonusEnds,\n\t\t\t\tbalance,\n\t\t\t\taddress:addresses[index]\n\t\t\t}\n    \t} )\n\n    \tthis.setState({\n    \t\tprojects:projects\n    \t})\n\t}\n\n\trender(){\n\t\tlet projectListInfo = this.state.projects.map( (project,index)=>{\n\t\t\tlet flagBonusTime = project.bonusEnd > Date.parse(new Date())/1000;\n\t\t\tconsole.log(flagBonusTime,project.bonusEnd,Date.parse(new Date())/1000)\n\t\t\treturn (\n\t    \t\t<Card className={flagBonusTime ? \"goldStyle\" : \"\",\"mt20\"} key={index}>\n\t\t\t\t\t<Card.Header> {project.projectName} </Card.Header>\n\t\t\t\t\t<Card.Body >\n\t\t\t\t\t\t<Card.Title className=\"textHidden\">{project.description}</Card.Title>\n\t\t\t\t\t\t<Card.Text as={Row}>\n\t\t\t\t\t\t\t<Col>goal: <span className={\"red\"}>{web3.utils.fromWei(project.goal)}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>maxInvest: <span className={\"red\"}>{web3.utils.fromWei(project.maxInvest)}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>minInvest: <span className={\"red\"}>{web3.utils.fromWei(project.minInvest)}</span> eth</Col>\n\t\t\t\t\t\t\t<Col>完成度: <span className={\"red\"}>{web3.utils.fromWei(project.minInvest)}</span> eth</Col>\n\t\t\t\t\t    </Card.Text>\n\t\t\t\t\t\t<Button as={Link} className={\"mt10\"} to={\"/projectDetail/\"+project.address} variant={flagBonusTime?\"warning\":\"success\"} size=\"sm\">Learn more</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>众筹列表</h1>\n\t\t\t\t{ projectListInfo }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}