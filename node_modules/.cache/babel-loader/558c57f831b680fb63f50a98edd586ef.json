{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file errors.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\"use strict\";\n\nmodule.exports = {\n  ErrorResponse: function (result) {\n    var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\n    return new Error('Returned error: ' + message);\n  },\n  InvalidNumberOfParams: function (got, expected, method) {\n    return new Error('Invalid number of parameters for \"' + method + '\". Got ' + got + ' expected ' + expected + '!');\n  },\n  InvalidConnection: function (host, event) {\n    return this.ConnectionError('CONNECTION ERROR: Couldn\\'t connect to node ' + host + '.', event);\n  },\n  InvalidProvider: function () {\n    return new Error('Provider not set or invalid');\n  },\n  InvalidResponse: function (result) {\n    var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n    return new Error(message);\n  },\n  ConnectionTimeout: function (ms) {\n    return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n  },\n  ConnectionNotOpenError: function (event) {\n    return this.ConnectionError('connection not open on send()', event);\n  },\n  ConnectionCloseError: function (event) {\n    if (typeof event === 'object' && event.code && event.reason) {\n      return this.ConnectionError('CONNECTION ERROR: The connection got closed with ' + 'the close code `' + event.code + '` and the following ' + 'reason string `' + event.reason + '`', event);\n    }\n\n    return new Error('CONNECTION ERROR: The connection closed unexpectedly');\n  },\n  MaxAttemptsReachedOnReconnectingError: function () {\n    return new Error('Maximum number of reconnect attempts reached!');\n  },\n  PendingRequestsOnReconnectingError: function () {\n    return new Error('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n  },\n  ConnectionError: function (msg, event) {\n    const error = new Error(msg);\n\n    if (event) {\n      error.code = event.code;\n      error.reason = event.reason;\n    }\n\n    return error;\n  },\n  RevertInstructionError: function (reason, signature) {\n    var error = new Error('Your request got reverted with the following reason string: ' + reason);\n    error.reason = reason;\n    error.signature = signature;\n    return error;\n  },\n  TransactionRevertInstructionError: function (reason, signature, receipt) {\n    var error = new Error('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2));\n    error.reason = reason;\n    error.signature = signature;\n    error.receipt = receipt;\n    return error;\n  },\n  TransactionError: function (message, receipt) {\n    var error = new Error(message);\n    error.receipt = receipt;\n    return error;\n  },\n  NoContractAddressFoundError: function (receipt) {\n    return this.TransactionError('The transaction receipt didn\\'t contain a contract address.', receipt);\n  },\n  ContractCodeNotStoredError: function (receipt) {\n    return this.TransactionError('The contract code couldn\\'t be stored, please check your gas limit.', receipt);\n  },\n  TransactionRevertedWithoutReasonError: function (receipt) {\n    return this.TransactionError('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2), receipt);\n  },\n  TransactionOutOfGasError: function (receipt) {\n    return this.TransactionError('Transaction ran out of gas. Please provide more gas:\\n' + JSON.stringify(receipt, null, 2), receipt);\n  }\n};","map":{"version":3,"sources":["/home/tperam/code/crowdfunding/node_modules/web3-core-helpers/src/errors.js"],"names":["module","exports","ErrorResponse","result","message","error","JSON","stringify","Error","InvalidNumberOfParams","got","expected","method","InvalidConnection","host","event","ConnectionError","InvalidProvider","InvalidResponse","ConnectionTimeout","ms","ConnectionNotOpenError","ConnectionCloseError","code","reason","MaxAttemptsReachedOnReconnectingError","PendingRequestsOnReconnectingError","msg","RevertInstructionError","signature","TransactionRevertInstructionError","receipt","TransactionError","NoContractAddressFoundError","ContractCodeNotStoredError","TransactionRevertedWithoutReasonError","TransactionOutOfGasError"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file errors.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\n\"use strict\";\n\nmodule.exports = {\n    ErrorResponse: function (result) {\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\n        return new Error('Returned error: ' + message);\n    },\n    InvalidNumberOfParams: function (got, expected, method) {\n        return new Error('Invalid number of parameters for \"'+ method +'\". Got '+ got +' expected '+ expected +'!');\n    },\n    InvalidConnection: function (host, event){\n        return this.ConnectionError('CONNECTION ERROR: Couldn\\'t connect to node '+ host +'.', event);\n    },\n    InvalidProvider: function () {\n        return new Error('Provider not set or invalid');\n    },\n    InvalidResponse: function (result){\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n        return new Error(message);\n    },\n    ConnectionTimeout: function (ms){\n        return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n    },\n    ConnectionNotOpenError: function (event){\n        return this.ConnectionError('connection not open on send()', event);\n    },\n    ConnectionCloseError: function (event){\n        if (typeof event === 'object' && event.code && event.reason) {\n            return this.ConnectionError(\n                'CONNECTION ERROR: The connection got closed with ' +\n                'the close code `' + event.code + '` and the following ' +\n                'reason string `' + event.reason + '`',\n                event\n            );\n        }\n\n        return new Error('CONNECTION ERROR: The connection closed unexpectedly');\n    },\n    MaxAttemptsReachedOnReconnectingError: function (){\n        return new Error('Maximum number of reconnect attempts reached!');\n    },\n    PendingRequestsOnReconnectingError: function (){\n        return new Error('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n    },\n    ConnectionError: function (msg, event){\n        const error = new Error(msg);\n        if (event) {\n            error.code = event.code;\n            error.reason = event.reason;\n        }\n\n        return error;\n    },\n    RevertInstructionError: function(reason, signature) {\n        var error = new Error('Your request got reverted with the following reason string: ' + reason);\n        error.reason = reason;\n        error.signature = signature;\n\n        return error;\n    },\n    TransactionRevertInstructionError: function(reason, signature, receipt) {\n        var error = new Error('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2));\n        error.reason = reason;\n        error.signature = signature;\n        error.receipt = receipt;\n\n        return error;\n    },\n    TransactionError: function(message, receipt) {\n        var error = new Error(message);\n        error.receipt = receipt;\n\n        return error;\n    },\n    NoContractAddressFoundError: function(receipt) {\n       return this.TransactionError('The transaction receipt didn\\'t contain a contract address.', receipt);\n    },\n    ContractCodeNotStoredError: function(receipt) {\n        return this.TransactionError('The contract code couldn\\'t be stored, please check your gas limit.', receipt);\n    },\n    TransactionRevertedWithoutReasonError: function(receipt) {\n        return this.TransactionError('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2), receipt);\n    },\n    TransactionOutOfGasError: function(receipt) {\n        return this.TransactionError('Transaction ran out of gas. Please provide more gas:\\n' + JSON.stringify(receipt, null, 2), receipt);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}